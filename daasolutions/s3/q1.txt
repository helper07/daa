#include <iostream>
#include <vector>
#include <ctime>

using namespace std;

// Partition function for Quick sort
int partition(vector<int>& arr, int low, int high) {
    int pivot = arr[high];
    int i = low - 1;

    for (int j = low; j < high; j++) {
        if (arr[j] < pivot) {
            i++;
            swap(arr[i], arr[j]);
        }
    }
    swap(arr[i + 1], arr[high]);
    return i + 1;
}

// Quick sort function
void quickSort(vector<int>& arr, int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);

        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int main() {
    // Seed for random number generation
    srand(time(0));

    int n;
    cout << "Enter the number of elements: ";
    cin >> n;

    vector<int> numbers(n);

    // Generate random numbers
    for (int i = 0; i < n; i++) {
        numbers[i] = rand() % 1000;
    }

    cout << "Original list: ";
    for (int num : numbers) {
        cout << num << " ";
    }
    cout << endl;

    // Measure the time taken for sorting
    clock_t startTime = clock();
    quickSort(numbers, 0, n - 1);
    clock_t endTime = clock();

    cout << "Sorted list: ";
    for (int num : numbers) {
        cout << num << " ";
    }
    cout << endl;

    double timeTaken = double(endTime - startTime) / CLOCKS_PER_SEC;
    cout << "Time taken to sort: " << timeTaken << " seconds" << endl;

    return 0;
}
