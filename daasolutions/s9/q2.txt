#include <iostream>
#include <vector>

using namespace std;

void subsetSum(vector<int>& nums, int target, int index, vector<int>& subset, int currSum) {
    if (currSum == target) {
        // Print the subset which sums up to target
        cout << "Subset with sum " << target << ": ";
        for (int num : subset) {
            cout << num << " ";
        }
        cout << endl;
        return;
    }

    if (index == nums.size() || currSum > target) {
        return;
    }

    // Include the current element
    subset.push_back(nums[index]);
    subsetSum(nums, target, index + 1, subset, currSum + nums[index]);
    subset.pop_back(); // Backtrack

    // Exclude the current element
    subsetSum(nums, target, index + 1, subset, currSum);
}

int main() {
    vector<int> nums = {1, 3, 4, 5, 6};
    int target = 9;

    vector<int> subset;
    subsetSum(nums, target, 0, subset, 0);

    return 0;
}
